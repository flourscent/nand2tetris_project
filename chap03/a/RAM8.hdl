// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
		DMux8Way(in=load, sel=address, a=reg00load, b=reg01load, c=reg02load, d=reg03load, e=reg04load, f=reg05load, g=reg06load, h=reg07load);
		Register(in=in, load=reg00load, out=reg00out);
		Register(in=in, load=reg01load, out=reg01out);
		Register(in=in, load=reg02load, out=reg02out);
		Register(in=in, load=reg03load, out=reg03out);
		Register(in=in, load=reg04load, out=reg04out);
		Register(in=in, load=reg05load, out=reg05out);
		Register(in=in, load=reg06load, out=reg06out);
		Register(in=in, load=reg07load, out=reg07out);
		Mux8Way16(a=reg00out, b=reg01out, c=reg02out, d=reg03out, e=reg04out, f=reg05out, g=reg06out, h=reg07out, sel=address, out=out);
}
